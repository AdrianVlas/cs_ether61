#ifndef __CONST_DRIVER_SERIAL_FLASH__
#define __CONST_DRIVER_SERIAL_FLASH__

enum _index_dataflash
{
  INDEX_DATAFLASH_1 = 0,
  INDEX_DATAFLASH_2,
  
  NUMBER_DATAFLASH_CHIP
};
  

#define VAGA_SIZE_PAGE_DATAFLASH_1      8 //ц€ константа потр≥бна т≥льки дл€ того, щоб можна було легко множити на 256 ≥ д≥лити на 256
#define SIZE_PAGE_DATAFLASH_1           (1 << VAGA_SIZE_PAGE_DATAFLASH_1) //256 байт
#define NUMBER_PAGES_INTO_DATAFLASH_1   512

#define VAGA_SIZE_PAGE_DATAFLASH_2      9 //ц€ константа потр≥бна т≥льки дл€ того, щоб можна було легко множити на 512 ≥ д≥лити на 512
#define SIZE_PAGE_DATAFLASH_2           (1 << VAGA_SIZE_PAGE_DATAFLASH_2) //512 байт
#define NUMBER_PAGES_INTO_DATAFLASH_2   4096

#if SIZE_PAGE_DATAFLASH_2 >= SIZE_PAGE_DATAFLASH_1
#define SIZE_PAGE_DATAFLASH_MAX         SIZE_PAGE_DATAFLASH_2
#else
#define SIZE_PAGE_DATAFLASH_MAX         SIZE_PAGE_DATAFLASH_1
#endif

#define SIZE_BUFFER_SERIAL_DATAFLASH_READ_WRITE      (2*SIZE_PAGE_DATAFLASH_MAX)


#define NUMBER_PAGES_INTO_LOG            480
#define NUMBER_PAGES_INTO_PR_ERR        (NUMBER_PAGES_INTO_DATAFLASH_1 - NUMBER_PAGES_INTO_LOG)

#define MIN_ADDRESS_LOG_AREA                  0x0
#define SIZE_LOG_AREA                         (NUMBER_PAGES_INTO_LOG << VAGA_SIZE_PAGE_DATAFLASH_1)
#define MAX_ADDRESS_LOG_AREA                  (MIN_ADDRESS_LOG_AREA + SIZE_LOG_AREA - 1)

#define SIZE_ONE_RECORD_PR_ERR                11
#define MAX_NUMBER_RECORDS_PR_ERR_INTO_BUFFER 32 //максимальнак≥льк≥сть запис≥в в буфер≥ типу FIFO, €к≥ чекають на запису DataFlash
#define SIZE_BUFFER_FOR_PR_ERR                (SIZE_ONE_RECORD_PR_ERR*MAX_NUMBER_RECORDS_PR_ERR_INTO_BUFFER)
#define MIN_ADDRESS_PR_ERR_AREA               (MAX_ADDRESS_LOG_AREA + 1)
#define SIZE_PR_ERR_AREA                      (NUMBER_PAGES_INTO_PR_ERR << VAGA_SIZE_PAGE_DATAFLASH_1)
#define MAX_ADDRESS_PR_ERR_AREA               (MIN_ADDRESS_PR_ERR_AREA + SIZE_PR_ERR_AREA - 1)
#define MAX_NUMBER_RECORDS_INTO_PR_ERR        (SIZE_PR_ERR_AREA / SIZE_ONE_RECORD_PR_ERR)

#define TRANSACTION_EXECUTING_NONE              (-1)
#define TRANSACTION_EXECUTING                   0
#define TRANSACTION_EXECUTED_WAIT_ANALIZE       1
#define TRANSACTION_EXECUTED_ERROR              2

enum _task_df_bit
{
  TASK_ERASE_DATAFLASH_1_BIT = 0,
  TASK_WRITE_PR_ERR_RECORDS_INTO_DATAFLASH_BIT,
  TASK_MAMORY_READ_DATAFLASH_FOR_PR_ERR_MENU_BIT,
  TASK_MAMORY_READ_DATAFLASH_FOR_PR_ERR_USB_BIT,
  TASK_MAMORY_READ_DATAFLASH_FOR_PR_ERR_RS485_BIT,
  
  _SEPARATOR_BIT_TASKS_DATADLASH1_AND_TASKS_DATADLASH2,
  
  TASK_ERASE_DATAFLASH_2_BIT = _SEPARATOR_BIT_TASKS_DATADLASH1_AND_TASKS_DATADLASH2
};

#define LABEL_START_RECORD_PR_ERR       0x5A

#define CLEAN_PR_ERR_BIT      0
#define CLEAN_PR_ERR          (1 << CLEAN_PR_ERR_BIT)

#endif
